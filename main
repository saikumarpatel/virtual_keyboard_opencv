import cv2
from cvzone.HandTrackingModule import HandDetector
from time import sleep



finaltext=""
cap=cv2.VideoCapture(0)
cap.set(3,1280)
cap.set(4,720)

detector=HandDetector(detectionCon=0.8,maxHands=2)

d={}

def drawall(img,buttonlist):
    for button in buttonlist:
        x,y=button.pos
        text=button.text
        w,h=button.size
        cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), cv2.FILLED)
        cv2.putText(img, text, (x + 15, y + 30), cv2.FONT_HERSHEY_SIMPLEX, 1, ((255, 155, 255)), 3)
    return img


class keyboardd:
    def __init__(self,pos,text,size=[50,50]):
        self.pos=pos
        self.text=text
        self.size=size



buttonlist=[]
list = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L',
            'Z', 'X', 'C', 'V', 'B', 'N', 'M'," ",'del']
num=['1','2','3','4','5','6','7','8','9','0']
y= 100
x = 100

for i in list[:10]:
    buttonlist.append(keyboardd([x,y],i,size=[50,50]))
    x+=60
x+=120
for i in ['1','2','3']:
    buttonlist.append(keyboardd([x, y], i, size=[50, 50]))
    x+=60

y = 200
x = 100
for i in list[10:19]:
    buttonlist.append(keyboardd([x,y],i,size=[50,50]))
    x += 60
x+=180
for i in ['4','5','6']:
    buttonlist.append(keyboardd([x, y], i, size=[50, 50]))
    x += 60


y = 300
x= 100
for i in list[19:]:
    buttonlist.append(keyboardd([x,y],i,size=[50,50]))
    x += 60
x+=180
for i in ['7','8','9','0']:
    buttonlist.append(keyboardd([x, y], i, size=[50, 50]))
    x += 60

while True:
    #finaltext=""
    sucess, img=cap.read()
    img=cv2.flip(img,cv2.ROTATE_90_COUNTERCLOCKWISE)

    hands,img=detector.findHands(img)
    img = drawall(img, buttonlist)
    if hands:
        hand1 = hands[0]
        lmList1 = hand1["lmList"]# List of 21 Landmark points
        #print(lmList1[8][0],lmList1[8][1])
        for button in buttonlist:

            x, y =button.pos
            #print(lmList1[8][0], lmList1[8][1], x, y)
            w, h= button.size

            if y<=lmList1[8][1]<=y+w and x<=lmList1[8][0]<=x+h:
                cv2.rectangle(img, (x, y), (x + 50, y + 50), (210, 25, 124), cv2.FILLED)
                cv2.putText(img, button.text, (x + 15, y + 30), cv2.FONT_HERSHEY_SIMPLEX, 1, ((255, 0, 255)), 3)
                if abs(lmList1[8][1]-lmList1[12][1])<20 and abs(lmList1[8][0]-lmList1[12][0])<20:
                    cv2.rectangle(img, (x, y), (x + 50, y + 50), (0, 255, 0), cv2.FILLED)
                    cv2.putText(img, button.text, (x + 15, y + 30), cv2.FONT_HERSHEY_SIMPLEX, 1, ((255, 0, 155)), 3)
                    if button.text=="del":
                        finaltext=finaltext[:-1]
                    else:
                        finaltext+=str(button.text)
                    sleep(0.5)


        bbox1 = hand1["bbox"]
        centerPoint1 = hand1['center']
        handType1 = hand1["type"]
        fingers1 = detector.fingersUp(hand1)

        if len(hands) == 2:
            # Hand 2
            hand2 = hands[1]
            lmList2 = hand2["lmList"]
            bbox2 = hand2["bbox"]
            centerPoint2 = hand2['center']
            handType2 = hand2["type"]

            fingers2 = detector.fingersUp(hand2)

            # Find Distance between two Landmarks. Could be same hand or different hands
            length, info, img = detector.findDistance(lmList1[8], lmList2[8], img)  # with draw
            # length, info = detector.findDistance(lmList1[8], lmList2[8])  # with draw
    cv2.rectangle(img,[100,400],[800,800],(255,255,255),cv2.FILLED)
    cv2.putText(img,finaltext,(150,450),cv2.FONT_HERSHEY_SIMPLEX,1,((122,234,213)),2)

    cv2.imshow("image",img)
    cv2.waitKey(1)



